Generating coverage report
============================= test session starts ==============================
platform darwin -- Python 3.12.4, pytest-8.1.1, pluggy-1.5.0
rootdir: /Users/islamelkadi/Documents/GitHub/sso-manager
configfile: pyproject.toml
testpaths: tests
plugins: cov-5.0.0, xdist-3.6.1
collected 516 items

tests/integration/test_index.py::test[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/integration/../configs/organizations/aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/integration/manifests/no_rules.yaml]
-------------------------------- live log setup --------------------------------
2024-08-23 20:49:51 INFO Found credentials in shared credentials file: ~/.aws/credentials
PASSED                                                                   [  0%]
tests/integration/test_index.py::test[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/integration/../configs/organizations/aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/integration/manifests/no_rules.yaml] PASSED [  0%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml]
-------------------------------- live log setup --------------------------------
2024-08-23 20:49:56 INFO Found credentials in environment variables.
PASSED                                                                   [  0%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [  0%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [  0%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [  1%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [  1%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [  1%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [  1%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [  1%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [  2%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [  2%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [  2%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [  2%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [  2%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [  3%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [  3%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [  3%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [  3%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [  3%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [  4%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [  4%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [  4%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [  4%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [  4%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [  5%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [  5%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [  5%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [  5%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [  5%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [  6%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [  6%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [  6%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [  6%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [  6%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [  6%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [  7%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [  7%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [  7%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [  7%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [  7%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [  8%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [  8%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [  8%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [  8%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [  8%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [  9%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [  9%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [  9%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [  9%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [  9%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 10%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 10%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 10%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 10%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 10%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 11%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 11%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 11%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 11%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 11%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 12%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 12%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 12%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 12%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 12%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 12%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 13%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 13%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 13%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 13%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 13%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 14%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 14%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 14%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 14%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 14%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 15%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 15%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 15%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 15%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 15%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 16%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 16%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 16%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 16%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 16%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 17%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 17%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 17%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 17%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 17%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 18%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 18%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 18%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 18%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 18%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 18%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 19%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 19%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 19%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 19%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 19%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 20%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 20%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 20%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 20%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 20%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 21%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 21%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 21%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 21%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 21%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 22%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 22%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 22%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 22%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 22%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 23%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 23%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 23%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 23%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 23%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 24%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 24%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 24%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 24%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 24%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 25%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 25%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 25%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 25%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 25%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 25%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 26%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 26%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 26%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 26%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 26%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 27%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 27%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 27%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 27%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 27%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 28%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 28%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 28%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 28%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 28%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 29%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 29%]
tests/unit/test_access_control_resolver.py::test_create_assignments[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 29%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 29%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 29%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 30%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 30%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 30%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 30%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 30%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 31%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 31%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 31%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 31%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 31%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 31%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 32%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 32%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 32%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 32%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 32%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 33%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 33%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 33%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 33%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 33%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 34%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 34%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 34%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 34%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 34%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 35%]
tests/unit/test_access_control_resolver.py::test_create_assignments[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 35%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 35%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 35%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 35%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 36%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 36%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 36%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 36%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 36%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 37%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 37%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 37%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 37%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 37%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 37%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 38%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 38%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 38%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 38%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 38%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 39%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 39%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 39%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 39%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 39%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 40%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 40%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 40%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 40%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 40%]
tests/unit/test_access_control_resolver.py::test_generate_invalid_assignments_report[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 41%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 41%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 41%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 41%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 41%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 42%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 42%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 42%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 42%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 42%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 43%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 43%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 43%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 43%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 43%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 43%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 44%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 44%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 44%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 44%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 44%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 45%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 45%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 45%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 45%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 45%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 46%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 46%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 46%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 46%]
tests/unit/test_access_control_resolver.py::test_delete_account_assignments[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 46%]
tests/unit/test_identity_center_mapper.py::test_missing_default_constructor_parameters[aws_org_1.json] PASSED [ 47%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users0-excluded_sso_groups0-excluded_permission_sets0] PASSED [ 47%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users1-excluded_sso_groups1-excluded_permission_sets1] PASSED [ 47%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users2-excluded_sso_groups2-excluded_permission_sets2] PASSED [ 47%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users3-excluded_sso_groups3-excluded_permission_sets3] PASSED [ 47%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users4-excluded_sso_groups4-excluded_permission_sets4] PASSED [ 48%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users5-excluded_sso_groups5-excluded_permission_sets5] PASSED [ 48%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users6-excluded_sso_groups6-excluded_permission_sets6] PASSED [ 48%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users7-excluded_sso_groups7-excluded_permission_sets7] PASSED [ 48%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users8-excluded_sso_groups8-excluded_permission_sets8] PASSED [ 48%]
tests/unit/test_identity_center_mapper.py::test_list_identity_center_entities[aws_org_1.json-excluded_sso_users9-excluded_sso_groups9-excluded_permission_sets9] PASSED [ 49%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 49%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 49%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 49%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 49%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 50%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 50%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 50%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 50%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 50%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 50%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 51%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 51%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 51%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 51%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 51%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 52%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 52%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 52%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 52%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 52%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 53%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 53%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 53%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 53%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 53%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 54%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 54%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 54%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 54%]
tests/unit/test_index.py::test_lambda_handler[0.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 54%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 55%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 55%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 55%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 55%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 55%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 56%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 56%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 56%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 56%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 56%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 56%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 57%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 57%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 57%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 57%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 57%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 58%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 58%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 58%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 58%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 58%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 59%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 59%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 59%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 59%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 59%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 60%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 60%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 60%]
tests/unit/test_index.py::test_lambda_handler[0.2-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 60%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 60%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 61%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 61%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 61%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 61%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 61%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 62%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 62%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 62%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 62%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 62%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 62%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 63%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 63%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 63%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 63%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 63%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 64%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 64%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 64%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 64%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 64%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 65%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 65%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 65%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 65%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 65%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 66%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 66%]
tests/unit/test_index.py::test_lambda_handler[0.4-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 66%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 66%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 66%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 67%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 67%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 67%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 67%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 67%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 68%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 68%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 68%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 68%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 68%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 68%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 69%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 69%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 69%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 69%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 69%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 70%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 70%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 70%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 70%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 70%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 71%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 71%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 71%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 71%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 71%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 72%]
tests/unit/test_index.py::test_lambda_handler[0.6-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 72%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 72%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 72%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 72%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 73%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 73%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 73%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 73%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 73%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 74%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 74%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 74%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 74%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 74%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 75%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 75%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 75%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 75%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 75%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 75%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 76%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 76%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 76%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 76%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 76%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 77%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 77%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 77%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 77%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 77%]
tests/unit/test_index.py::test_lambda_handler[0.8-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 78%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 78%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 78%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 78%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 78%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 79%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 79%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 79%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 79%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 79%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 80%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 80%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 80%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 80%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 80%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 81%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 81%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 81%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 81%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 81%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 81%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 82%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 82%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 82%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 82%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 82%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 83%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 83%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 83%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 83%]
tests/unit/test_index.py::test_lambda_handler[1.0-aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 83%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] FAILED [ 84%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] FAILED [ 84%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] FAILED [ 84%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] FAILED [ 84%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] FAILED [ 84%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] FAILED [ 85%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] FAILED [ 85%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] FAILED [ 85%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] FAILED [ 85%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] FAILED [ 85%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] FAILED [ 86%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] FAILED [ 86%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] FAILED [ 86%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] FAILED [ 86%]
tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] FAILED [ 86%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] FAILED [ 87%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] FAILED [ 87%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] FAILED [ 87%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] FAILED [ 87%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] FAILED [ 87%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] FAILED [ 87%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] FAILED [ 88%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] FAILED [ 88%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] FAILED [ 88%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] FAILED [ 88%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] FAILED [ 88%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] FAILED [ 89%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] FAILED [ 89%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] FAILED [ 89%]
tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] FAILED [ 89%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_invalid_principal_type.yaml] PASSED [ 89%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_missing_permission_set_name.yaml] PASSED [ 90%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_invalid_principal_type_datatype.yaml] PASSED [ 90%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_invalid_target_type.yaml] PASSED [ 90%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_invalid_rule_type_datatype.yaml] PASSED [ 90%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_invalid_target_type_datatype.yaml] PASSED [ 90%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_invalid_principal_name_datatype.yaml] PASSED [ 91%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_invalid_principal_type.yaml] PASSED [ 91%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_missing_principal_name.yaml] PASSED [ 91%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_invalid_rule_type.yaml] PASSED [ 91%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_missing_permission_set_name.yaml] PASSED [ 91%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_invalid_principal_name_datatype.yaml] PASSED [ 92%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_invalid_rule_type_datatype.yaml] PASSED [ 92%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_invalid_target_type_datatype.yaml] PASSED [ 92%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_invalid_permission_set_name_datatype.yaml] PASSED [ 92%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_invalid_target_type.yaml] PASSED [ 92%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_invalid_permission_set_name_datatype.yaml] PASSED [ 93%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/multiple_rules_invalid_rule_type.yaml] PASSED [ 93%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_missing_principal_name.yaml] PASSED [ 93%]
tests/unit/test_manifest_reader.py::test_rules_invalid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/invalid_schema/single_rule_invalid_principal_type_datatype.yaml] PASSED [ 93%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] PASSED [ 93%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] PASSED [ 93%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] PASSED [ 94%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] PASSED [ 94%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] PASSED [ 94%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] PASSED [ 94%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] PASSED [ 94%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] PASSED [ 95%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] PASSED [ 95%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] PASSED [ 95%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] PASSED [ 95%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] PASSED [ 95%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] PASSED [ 96%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] PASSED [ 96%]
tests/unit/test_manifest_reader.py::test_rules_valid_manifest_schema[/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] PASSED [ 96%]
tests/unit/test_ous_accounts_mapper.py::test_missing_constructor_parameter PASSED [ 96%]
tests/unit/test_ous_accounts_mapper.py::test_list_active_included_aws_accounts[aws_org_1.json-excluded_ous0-excluded_accounts0] PASSED [ 96%]
tests/unit/test_ous_accounts_mapper.py::test_list_active_included_aws_accounts[aws_org_1.json-excluded_ous1-excluded_accounts1] PASSED [ 97%]
tests/unit/test_ous_accounts_mapper.py::test_list_active_included_aws_accounts[aws_org_1.json-excluded_ous2-excluded_accounts2] PASSED [ 97%]
tests/unit/test_ous_accounts_mapper.py::test_list_active_included_aws_accounts[aws_org_1.json-excluded_ous3-excluded_accounts3] PASSED [ 97%]
tests/unit/test_ous_accounts_mapper.py::test_list_active_included_aws_accounts[aws_org_1.json-excluded_ous4-excluded_accounts4] PASSED [ 97%]
tests/unit/test_ous_accounts_mapper.py::test_list_active_included_aws_accounts[aws_org_1.json-excluded_ous5-excluded_accounts5] PASSED [ 97%]
tests/unit/test_utils.py::test_convert_list_to_dict_basic_conversion PASSED [ 98%]
tests/unit/test_utils.py::test_convert_list_to_dict_empty_list PASSED    [ 98%]
tests/unit/test_utils.py::test_convert_list_to_dict_duplicate_keys PASSED [ 98%]
tests/unit/test_utils.py::test_convert_list_to_dict_missing_key_attr PASSED [ 98%]
tests/unit/test_utils.py::test_convert_specific_keys_to_uppercase_single_flat_key PASSED [ 98%]
tests/unit/test_utils.py::test_convert_specific_keys_to_uppercase_nested_keys PASSED [ 99%]
tests/unit/test_utils.py::test_convert_specific_keys_to_uppercase_no_keys_to_uppercase PASSED [ 99%]
tests/unit/test_utils.py::test_convert_specific_keys_to_uppercase_mixed_data_types PASSED [ 99%]
tests/unit/test_utils.py::test_load_yaml_file PASSED                     [ 99%]
tests/unit/test_utils.py::test_load_json_file PASSED                     [ 99%]
tests/unit/test_utils.py::test_load_unsupported_format PASSED            [100%]

=================================== FAILURES ===================================
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '864821653491', 'workload_1_prod': '489252402309', 'workload_1_suspended': ..., 'test': [{'Id': '375836430872', 'Name': 'workload_1_test'}, {'Id': '016113856857', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cb607d0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '264038841238', 'workload_1_prod': '762172686752', 'workload_1_suspended': ..., 'test': [{'Id': '815457463042', 'Name': 'workload_1_test'}, {'Id': '561301831944', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10bd03410>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '386272401029', 'workload_1_prod': '157666152908', 'workload_1_suspended': ..., 'test': [{'Id': '967598536220', 'Name': 'workload_1_test'}, {'Id': '112927277970', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10ca76720>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '221742340473', 'workload_1_prod': '534090621230', 'workload_1_suspended': ..., 'test': [{'Id': '357669842209', 'Name': 'workload_1_test'}, {'Id': '270176169557', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cc16e40>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '499173125247', 'workload_1_prod': '121883245074', 'workload_1_suspended': ..., 'test': [{'Id': '253444083823', 'Name': 'workload_1_test'}, {'Id': '998373829612', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cad9010>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '150492996632', 'workload_1_prod': '889421049492', 'workload_1_suspended': ..., 'test': [{'Id': '854074539673', 'Name': 'workload_1_test'}, {'Id': '625850046017', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10bd789e0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '167432937346', 'workload_1_prod': '517869781344', 'workload_1_suspended': ..., 'test': [{'Id': '156649578524', 'Name': 'workload_1_test'}, {'Id': '119977432200', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cad9fa0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '458987845802', 'workload_1_prod': '323249985876', 'workload_1_suspended': ..., 'test': [{'Id': '676121999640', 'Name': 'workload_1_test'}, {'Id': '027999066518', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cb60bf0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '989845043566', 'workload_1_prod': '037445876290', 'workload_1_suspended': ..., 'test': [{'Id': '201505970706', 'Name': 'workload_1_test'}, {'Id': '949147118034', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c684e00>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '711092865981', 'workload_1_prod': '522687413025', 'workload_1_suspended': ..., 'test': [{'Id': '518156180110', 'Name': 'workload_1_test'}, {'Id': '518402307125', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c92e240>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '817615518130', 'workload_1_prod': '921519168474', 'workload_1_suspended': ..., 'test': [{'Id': '966695443073', 'Name': 'workload_1_test'}, {'Id': '207458388407', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c868470>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '732090355879', 'workload_1_prod': '586238045946', 'workload_1_suspended': ..., 'test': [{'Id': '107330910047', 'Name': 'workload_1_test'}, {'Id': '487836278055', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c4c5c70>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '510137119755', 'workload_1_prod': '747018668578', 'workload_1_suspended': ..., 'test': [{'Id': '007774264970', 'Name': 'workload_1_test'}, {'Id': '224011684421', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10caa2960>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '519681674755', 'workload_1_prod': '136504673326', 'workload_1_suspended': ..., 'test': [{'Id': '512859059718', 'Name': 'workload_1_test'}, {'Id': '150578890475', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cb127e0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '260141342878', 'workload_1_prod': '911734411901', 'workload_1_suspended': ..., 'test': [{'Id': '342590196109', 'Name': 'workload_1_test'}, {'Id': '079381325293', 'Name': 'workload_2_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c945d00>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '382664153567', 'workload_1_prod': '675134022806', 'workload_1_suspended': ..._1_test'}, {'Id': '322500469143', 'Name': 'workload_2_test'}, {'Id': '862514211998', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cb13740>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '992961895237', 'workload_1_prod': '663053166389', 'workload_1_suspended': ..._1_test'}, {'Id': '674368947725', 'Name': 'workload_2_test'}, {'Id': '399575705636', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c946720>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '752348105148', 'workload_1_prod': '173555087486', 'workload_1_suspended': ..._1_test'}, {'Id': '205887022366', 'Name': 'workload_2_test'}, {'Id': '932931709611', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cb13800>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '918002923497', 'workload_1_prod': '169379480462', 'workload_1_suspended': ..._1_test'}, {'Id': '313439059205', 'Name': 'workload_2_test'}, {'Id': '415763474945', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cc932c0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '640086562655', 'workload_1_prod': '950419659882', 'workload_1_suspended': ..._1_test'}, {'Id': '689701761175', 'Name': 'workload_2_test'}, {'Id': '168014520797', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cbc83e0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '013726302562', 'workload_1_prod': '041173005921', 'workload_1_suspended': ..._1_test'}, {'Id': '383753582469', 'Name': 'workload_2_test'}, {'Id': '517497045202', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cd22b10>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '016896819732', 'workload_1_prod': '144928223512', 'workload_1_suspended': ..._1_test'}, {'Id': '778991559863', 'Name': 'workload_2_test'}, {'Id': '238544609136', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c790800>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '496646713849', 'workload_1_prod': '337383179761', 'workload_1_suspended': ..._1_test'}, {'Id': '785785798530', 'Name': 'workload_2_test'}, {'Id': '398097405418', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c6981a0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '029866155518', 'workload_1_prod': '501444483714', 'workload_1_suspended': ..._1_test'}, {'Id': '316538748534', 'Name': 'workload_2_test'}, {'Id': '819236671181', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c957830>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '880097327752', 'workload_1_prod': '451315229163', 'workload_1_suspended': ..._1_test'}, {'Id': '283006166420', 'Name': 'workload_2_test'}, {'Id': '698344126208', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c957b60>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '801955790163', 'workload_1_prod': '019102538620', 'workload_1_suspended': ..._1_test'}, {'Id': '890480027213', 'Name': 'workload_2_test'}, {'Id': '872986857833', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c4fa150>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '443261750717', 'workload_1_prod': '222812459312', 'workload_1_suspended': ..._1_test'}, {'Id': '233224083435', 'Name': 'workload_2_test'}, {'Id': '922158568319', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10bb05a00>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '174625286454', 'workload_1_prod': '751772968816', 'workload_1_suspended': ..._1_test'}, {'Id': '837452041085', 'Name': 'workload_2_test'}, {'Id': '400041602247', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10ca97980>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '936707039567', 'workload_1_prod': '705080801700', 'workload_1_suspended': ..._1_test'}, {'Id': '897571890766', 'Name': 'workload_2_test'}, {'Id': '420705348457', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10c94ccb0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError
_ test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml] _

sso_admin_client = <botocore.client.SSOAdmin object at 0x10964e780>
setup_mock_aws_environment = {'account_name_id_map': {'workload_1_dev': '351955998959', 'workload_1_prod': '708339388275', 'workload_1_suspended': ..._1_test'}, {'Id': '097454813005', 'Name': 'workload_2_test'}, {'Id': '946664146138', 'Name': 'workload_3_test'}]}, ...}
manifest_filepath = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml'

    @pytest.mark.parametrize(
        "setup_mock_aws_environment, manifest_filepath",
        list(itertools.product(AWS_ORG_DEFINITION_FILES, VALID_MANIFEST_DEFINITION_FILES)),
        indirect=["setup_mock_aws_environment"],
    )
    def test_delete(sso_admin_client: boto3.client, setup_mock_aws_environment: Dict[str, Any], manifest_filepath: str) -> None:
        """
        Test the lambda_handler function with a mocked S3 environment.

        This test verifies that the lambda_handler function correctly processes a
        manifest file uploaded to an S3 bucket and deletes
        Parameters:
        ----------
        sso_admin_client : boto3.client
            The boto3 SSO admin client.
        setup_mock_aws_environment : Dict[str, Any]
            The AWS environment setup.
        manifest_filepath : str
            The filename of the manifest to be tested.
        """
        sort_keys = operator.itemgetter("PermissionSetArn", "PrincipalType", "PrincipalId", "TargetId")
        manifest_definition_filepath = os.path.join(CWD, "configs", "manifests", "valid_schema", manifest_filepath)

>       setup_s3_environment(manifest_definition_filepath, manifest_filepath)

tests/unit/test_index.py:186:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/utils.py:159: in setup_s3_environment
    s3_client.create_bucket(Bucket=bucket_name)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:565: in _api_call
    return self._make_api_call(operation_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/client.py:958: in _make_api_call
    api_params = self._emit_api_params(
.dev-venv/lib/python3.12/site-packages/botocore/client.py:1077: in _emit_api_params
    self.meta.events.emit(
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:412: in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:256: in emit
    return self._emit(event_name, kwargs)
.dev-venv/lib/python3.12/site-packages/botocore/hooks.py:239: in _emit
    response = handler(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

params = {'Bucket': '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml'}
kwargs = {'context': {'auth_type': None, 'client_config': <botocore.config.Config object at 0x10cc4aba0>, 'client_region': 'us-...ing_input': False}, 'event_name': 'before-parameter-build.s3.CreateBucket', 'model': OperationModel(name=CreateBucket)}
bucket = '/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml'
error_msg = 'Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules...rn:(aws).*:s3-outposts:[a-z\\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\\-]{1,63}$"'

    def validate_bucket_name(params, **kwargs):
        if 'Bucket' not in params:
            return
        bucket = params['Bucket']
        if not VALID_BUCKET.search(bucket) and not VALID_S3_ARN.search(bucket):
            error_msg = (
                f'Invalid bucket name "{bucket}": Bucket name must match '
                f'the regex "{VALID_BUCKET.pattern}" or be an ARN matching '
                f'the regex "{VALID_S3_ARN.pattern}"'
            )
>           raise ParamValidationError(report=error_msg)
E           botocore.exceptions.ParamValidationError: Parameter validation failed:
E           Invalid bucket name "/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"

.dev-venv/lib/python3.12/site-packages/botocore/handlers.py:287: ParamValidationError

---------- coverage: platform darwin, python 3.12.4-final-0 ----------
Coverage XML written to file coverage.xml

=========================== short test summary info ============================
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_1.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_2.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_1.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_ous.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_permission_sets.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_1.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_2.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous_diff_1.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts_diff_2.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_all_accounts.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_ous.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_valid_diff_2.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_permission_sets_diff_1.yaml]
FAILED tests/unit/test_index.py::test_delete[aws_org_2.json-/Users/islamelkadi/Documents/GitHub/sso-manager/tests/unit/manifests/valid_schema/multiple_rules_invalid_some_accounts.yaml]
======================= 30 failed, 486 passed in 53.42s ========================
