AWSTemplateFormatVersion: 2010-09-09
Description: CFN Template to create and deploy the SSO manager solution

Parameters:

  AppName:
    Type:        String
    Description: Application's name
    Default:     sso-manager

  AppPrefix:
    Type:        String
    Description: Application's name prefix
    Default:     permia-id

  IsDryRun:
    Type:        String
    Description: Run the app in dry run mode or not
    AllowedValues:
      - true
      - false
    Default: false

  RootOUId:
    Type:        String
    Description: AWS Organizations Root OU ID
    NoEcho:      true

  IdentityStoreId:
    Type:        String
    Description: AWS Identity Store ID
    NoEcho:      true

  IdentityStoreArn:
    Type:        String
    Description: AWS Identity Store ARN
    NoEcho:      true

  SsoManifetFileName:
    Type:        String
    Description: SSO Manifest file name
    Default:     sso_manifest.yaml

Resources:

  ########################################
  #              App config              #
  ########################################

  SsoManagerApplication:
    Type: AWS::AppConfig::Application
    Properties:
      Name: !Sub ${AppPrefix}-${AppName}
      Description: !Sub ${AppPrefix}-${AppName} application
      Tags:
        - Key: app-name
          Value: !Sub ${AppPrefix}-${AppName}
        - Key: managed-by
          Value: permira-id

  ########################################
  #               KMS Keys               #
  ########################################

  # CloudWatch
  CloudWatchLogsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS Key to access CloudWatch logs
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: CwlKmsPolicy
        Statement:
          - Sid: Enable key administration
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:TagResource
              - kms:UntagResource
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: "*"
          - Sid: Enable key usage by cloudwatch logs
            Effect: Allow
            Principal:
              Service:
                - !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*

  ########################################
  #                Wave 3                #
  ########################################

  Lambdas:
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - W3002
    DependsOn:
      - S3
      - KMS
      - CWL
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./lambda.yaml
      Parameters:
        IsDryRun:           !Ref IsDryRun
        AppName:            !Ref AppName
        AppPrefix:          !Ref AppPrefix
        CwlKmsArn:          !Sub /${AppPrefix}/${AppName}/kms/logs/arn
        S3KmsArn:           !Sub /${AppPrefix}/${AppName}/kms/s3/arn
        S3BucketArn:        !Sub /${AppPrefix}/${AppName}/s3/sso-manifest/arn
        S3BucketName:       !Sub /${AppPrefix}/${AppName}/s3/sso-manifest/name
        IdentityStoreId:    !Ref IdentityStoreId
        IdentityStoreArn:   !Ref IdentityStoreArn
        RootOUId:           !Ref RootOUId
        SsoManifetFileName: !Ref SsoManifetFileName
