AWSTemplateFormatVersion: 2010-09-09
Description: CFN Template to create and deploy the SSO manager solution

Parameters:

  AppName:
    Type: String
    Description: Application's name
    Default: sso-access-vendor

  AppPrefix:
    Type: String
    Description: Application's name prefix
    Default: permia-id

  IsDryRun:
    Type: String
    Description: Run the app in dry run mode or not
    AllowedValues:
      - true
      - false
    Default: false

  # SSO params
  RootOUId:
    Type: String
    Description: AWS Organizations Root OU ID
    NoEcho: true

  IdentityStoreId:
    Type: String
    Description: AWS Identity Store ID
    NoEcho: true

  IdentityStoreArn:
    Type: String
    Description: AWS Identity Store ARN
    NoEcho: true

  SsoManifetFileName:
    Type: String
    Description: SSO Manifest file name
    Default: sso_manifest.yaml

  # ECS params
  AppContainerImage:
    Type: String
    Description: Container repo image name

  TaskDefinitionCpu:
    Type: String
    Description: CPU Size
    Default: "256"

  TaskDefinitionMemory:
    Type: String
    Description: Memory Size
    Default: "512"

  CpuArchitecture:
    Type: String
    Description: CPU Architecture of task definition
    Default: ARM64

  OperatingSystemFamily:
    Type: String
    Description: OS of task definition
    Default: LINUX

  # EventBridge scheduler params
  SsoAccessVendorSchedule:
    Type: String
    Description: The schedule expression for the notification frequency
    Default: rate(30 minutes)

  IsSsoAccessVendorSchedulerEnabled:
    Type: String
    AllowedValues:
      - DISABLED
      - ENABLED
    Default: ENABLED
    Description: Flag to enable or disable scheduled reminders

  # VPC params
  EcsTaskSubnetIds:
    Type: String
    Description: Comma separated string of subnet IDs

  EcsTaskSecurityGroupIds:
    Type: String
    Description: Comma separated string of security group IDs

Resources:

# ---------------------------------------------------------------
#                               ECS
# ---------------------------------------------------------------

  # IAM
  SsoAccessVendorReadWritePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${AppPrefix}-${AppName}-sso-access-vendor-read-write
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:Query
              - dynamodb:UpdateItem
              - dynamodb:BatchWriteItem
            # Avoided doing !GetAtt EndUsersDataTable.Arn below to avoid circular dependency issues
            Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AppPrefix}_${AppName}_end_user_table

  SsoAccessVendorEcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AppPrefix}-${AppName}-sso-access-vendor-ecs-task-execution
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        # - !Ref SsoAccessVendorReadWritePolicy
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # ECS
  SsoAccessVendorEcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AppPrefix}-${AppName}-sso-access-vendor
      CapacityProviders:
        - FARGATE
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
      Configuration:
        ExecuteCommandConfiguration:
          Logging: DEFAULT

  SsoAccessVendorEcsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: !Ref TaskDefinitionCpu
      Memory: !Ref TaskDefinitionMemory
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt SsoAccessVendorEcsTaskExecutionRole.Arn
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: !Ref CpuArchitecture
        OperatingSystemFamily: !Ref OperatingSystemFamily
      ContainerDefinitions:
        - Essential: true
          Image: !Ref AppContainerImage
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group : !Sub /ecs-task/${AppPrefix}/${AppName}
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: /cron-task/access-vendor/
          Name: !Sub ${AppPrefix}-${AppName}-sso-access-vendor-service
          Environment:
            - Name: IS_DRY_RUN
              Value: !Ref IsDryRun
            - Name: IDENTITY_STORE_ID
              Value: !Ref IdentityStoreId
            - Name: IDENTITY_STORE_ARN
              Value: !Ref IdentityStoreArn
            - Name: ROOT_OU_ID
              Value: !Ref RootOUId
            - Name: SSO_MANIFEST_FILENAME
              Value: !Ref SsoManifetFileName

# ---------------------------------------------------------------
#                            EventBridge
# ---------------------------------------------------------------

  # IAM
  SsoAccessVendorSchedulerPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${AppPrefix}-${AppName}-sso-access-vendor-scheduler
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ecs:RunTask
            Resource:
              - !GetAtt SsoAccessVendorEcsTaskDefinition.TaskDefinitionArn
              - !Join [ ":", [ !GetAtt SsoAccessVendorEcsTaskDefinition.TaskDefinitionArn, "*" ] ]
            Condition:
              ArnLike:
                "ecs:Cluster": !GetAtt SsoAccessVendorEcsCluster.Arn
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: "*"
            Condition:
              StringLike:
                "iam:PassedToService": "ecs-tasks.amazonaws.com"

  SsoAccessVendorSchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AppPrefix}-${AppName}-sso-access-vendor-scheduler
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref SsoAccessVendorSchedulerPolicy

  # EventBridge
  SsoAccessVendorScheduler:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: !Sub ${AppPrefix}-${AppName}-sso-access-vendor
      Description: EventBridge scheduler schedule to execute sso access vendor ECS task
      ScheduleExpression: !Ref SsoAccessVendorSchedule
      FlexibleTimeWindow:
        Mode: "OFF"
      State: !Ref IsSsoAccessVendorSchedulerEnabled
      Target:
        Arn: !GetAtt SsoAccessVendorEcsCluster.Arn
        RoleArn: !GetAtt SsoAccessVendorSchedulerRole.Arn
        EcsParameters:
          TaskDefinitionArn: !GetAtt SsoAccessVendorEcsTaskDefinition.TaskDefinitionArn
          NetworkConfiguration:
            AwsvpcConfiguration:
              SecurityGroups: !Split [ ",", !Ref EcsTaskSecurityGroupIds ]
              Subnets: !Split [ ",", !Ref EcsTaskSubnetIds ]
          LaunchType: FARGATE
          EnableExecuteCommand: true
